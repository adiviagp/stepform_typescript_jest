{"ast":null,"code":"import { __rest, __assign } from './_virtual/_tslib.js';\nimport * as React from 'react';\nimport MuiSwitch from '@material-ui/core/Switch';\nimport invariant from 'tiny-warning';\n\nfunction fieldToSwitch(_a) {\n  var disabled = _a.disabled,\n      _b = _a.field,\n      fieldOnBlur = _b.onBlur,\n      field = __rest(_b, [\"onBlur\"]),\n      isSubmitting = _a.form.isSubmitting,\n      type = _a.type,\n      onBlur = _a.onBlur,\n      props = __rest(_a, [\"disabled\", \"field\", \"form\", \"type\", \"onBlur\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    invariant(type === 'checkbox', \"property type=checkbox is missing from field \" + field.name + \", this can caused unexpected behaviour\");\n  }\n\n  return __assign(__assign({\n    disabled: disabled !== null && disabled !== void 0 ? disabled : isSubmitting,\n    onBlur: onBlur !== null && onBlur !== void 0 ? onBlur : function (e) {\n      fieldOnBlur(e !== null && e !== void 0 ? e : field.name);\n    }\n  }, field), props);\n}\n\nfunction Switch(props) {\n  return React.createElement(MuiSwitch, __assign({}, fieldToSwitch(props)));\n}\n\nSwitch.displayName = 'FormikMaterialUISwitch';\nexport { Switch, fieldToSwitch };","map":{"version":3,"mappings":";;;;;SAsBgBA,cAAcC,IAOhB;AANZ,cAAQ,cAAR;AAAA,MACAC,aADA;AAAA,MACiBC,WAAW,YAD5B;AAAA,MACiCC,KAAK,cAA/B,UAA+B,CADtC;AAAA,MAEQC,YAAY,uBAFpB;AAAA,MAGAC,IAAI,UAHJ;AAAA,MAIAC,MAAM,YAJN;AAAA,MAKGC,KAAK,cANoB,+CAMpB,CALR;;AAOA,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCC,aAAS,CACPN,IAAI,KAAK,UADF,EAEP,kDAAgDF,KAAK,CAACS,IAAtD,GAA0D,wCAFnD,CAAT;AAID;;AAED;AACEC,YAAQ,EAAEA,QAAQ,SAAR,YAAQ,WAAR,cAAYT,YADxB;AAEEE,UAAM,EACJA,MAAM,SAAN,UAAM,WAAN,YACA,UAAUQ,CAAV,EAAW;AACTZ,iBAAW,CAACY,CAAC,SAAD,KAAC,WAAD,OAAKX,KAAK,CAACS,IAAZ,CAAX;AACD;AANL,KAOKT,KAPL,GAQKI,KARL;AAUD;;SAEeQ,OAAOR,OAAkB;AACvC,SAAOS,oBAACC,SAAD,EAAUC,aAAKnB,aAAa,CAACQ,KAAD,CAAlB,CAAV,CAAP;AACD;;AAEDQ,MAAM,CAACI,WAAP,GAAqB,wBAArB","names":["fieldToSwitch","_a","_b","fieldOnBlur","field","isSubmitting","type","onBlur","props","process","env","NODE_ENV","invariant","name","disabled","e","Switch","React","MuiSwitch","__assign","displayName"],"sources":["/Users/adiviagp/Documents/ReactJs/portofolio/stepform/node_modules/formik-material-ui/src/Switch.tsx"],"sourcesContent":["import * as React from 'react';\nimport MuiSwitch, {\n  SwitchProps as MuiSwitchProps,\n} from '@material-ui/core/Switch';\nimport { FieldProps } from 'formik';\nimport invariant from 'tiny-warning';\n\nexport interface SwitchProps\n  extends FieldProps,\n    Omit<\n      MuiSwitchProps,\n      | 'checked'\n      | 'name'\n      | 'value'\n      | 'defaultChecked'\n      | 'form'\n      // Excluded for conflict with Field type\n      | 'type'\n    > {\n  type?: string;\n}\n\nexport function fieldToSwitch({\n  disabled,\n  field: { onBlur: fieldOnBlur, ...field },\n  form: { isSubmitting },\n  type,\n  onBlur,\n  ...props\n}: SwitchProps): MuiSwitchProps {\n  if (process.env.NODE_ENV !== 'production') {\n    invariant(\n      type === 'checkbox',\n      `property type=checkbox is missing from field ${field.name}, this can caused unexpected behaviour`\n    );\n  }\n\n  return {\n    disabled: disabled ?? isSubmitting,\n    onBlur:\n      onBlur ??\n      function (e) {\n        fieldOnBlur(e ?? field.name);\n      },\n    ...field,\n    ...props,\n  };\n}\n\nexport function Switch(props: SwitchProps) {\n  return <MuiSwitch {...fieldToSwitch(props)} />;\n}\n\nSwitch.displayName = 'FormikMaterialUISwitch';\n"]},"metadata":{},"sourceType":"module"}